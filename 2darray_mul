main
		sub		sp, sp, #8
		movs		r3, #0
		str		r3, [sp, #4]
		b		L2
L5
		movs		r3, #0
		str		r3, [sp]
		b		L3
L4
		ldr		r3, [sp, #4]
		ldr		r2, [sp]
check_lsb
		TST		r3, #1		;check if least significant bit is 1
		Beq		adder		;if least significant bit is 1, branch to adder
increment
		LSRs		r3, r3, #1
		LSL		r2, r2, #1
		CMP		r3, #0
		Bne		check_lsb
		mov		r3, r4	 	;store back into r3 (register for sum in 2darray
		B		continue
adder
		ADDs		r4, r4, r2	;add shifted amount to sum set carry bit
		B		increment
continue
		lsls		r1, r3, #1
		adr		r0, L7
		ldr		r2, [sp, #4]
		mov		r3, r2
		lsls		r3, r3, #2
		add		r3, r3, r2
		ldr		r2, [sp]
		add		r3, r3, r2
		str		r1, [r0, r3, lsl #2]
		ldr		r3, [sp]
		adds		r3, r3, #1
		str		r3, [sp]
L3
		ldr		r3, [sp]
		cmp		r3, #4
		ble		L4
		ldr		r3, [sp, #4]
		adds		r3, r3, #1
		str		r3, [sp, #4]
L2
		ldr		r3, [sp, #4]
		cmp		r3, #9
		ble		L5
		movs		r3, #0
		mov		r0, r3
		add		sp, sp, #8
		mov		pc, lr
L7
iarr		fill		200
